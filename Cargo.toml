[package]
name = "disarm64"
version = "0.1.15"
edition = "2021"
authors = ["kromych <kromych@users.noreply.github.com>"]
description = """
disarm64 provides a tool and a library for decoding ARM64 instructions (at least 250 MiB/sec
of the decoding speed is delivered on a laptop that is used for development). Here you will
also find a utility for generating disassembler/instruction decoder tables in Rust from
a JSON file. Besides that, can visualize the instruction decoding as a tree.
"""
documentation = "https://github.com/kromych/disarm64"
homepage = "https://github.com/kromych/disarm64"
repository = "https://github.com/kromych/disarm64"
keywords = ["aarch64", "arm64", "arm-v8", "disassembler", "reverse-engineering"]
categories = ["command-line-utilities", "development-tools", "embedded"]
license = "Unlicense OR MIT"
readme = "Readme.md"

[features]
full = []
load_store = []
exception = []
system = []
default = ["exception"]

[lib]
path = "lib/src/lib.rs"

[[bin]]
name = "disarm64"
path = "disarm64/src/main.rs"

[[bin]]
name = "disarm64_gen"
path = "disarm64_gen/src/main.rs"

[dependencies]
disarm64_defn = { git = "https://github.com/kromych/disarm64_defn"}

anyhow = "1"
bitfield-struct = "0.6"
bitflags = { version = "2.4", features = ["serde"] }
clap = { version = "4", features = ["derive"] }
clap-num = "1"
env_logger = "0.11"
goblin = { version = "0.8", features = ["elf64", "pe64", "mach64"] }
log = "0.4"
memmap2 = "0.9"
proc-macro2 = { version = "1", default-features = false }
quote = { version = "1", default-features = false }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
